openapi: 3.0.0

info:
  title: 실시간 심리 건강 케어 플랫폼 API
  description: 사용자의 심리 상태에 맞춘 맞춤형 정신 건강 관리 및 지원을 제공하는 실시간 심리 건강 케어 플랫폼에 대한 API 문서입니다.
  version: 0.0.1
  contact:
    name: KUnicorn
    email: kunicorn@konkuk.ac.kr

servers:
  - url: https://api.mental-health-care.sample.com/v1

paths:
  /users:
    post:
      summary: Create a new user profile
      tags:
        - 사용자 관리
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: unicorn0105
                firstName:
                  type: string
                  example: 건국
                lastName:
                  type: string
                  example: 김
                email:
                  type: string
                  example: kunicorn0105@konkuk.ac.kr
                password:
                  type: string
                  example: 'PassW0rD!'
                phone:
                  type: string
                  example: '010-0000-1234'

      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid request

  /users/login:
    get:
      tags:
        - 사용자 관리
      summary: 로그인
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: string
                example: "{userID}"
        '400':
          description: 정확하지 않은 ID 또는 Password

  /users/logout:
    get:
      tags:
        - 사용자 관리
      summary: 현재 로그인된 유저의 세션 로그아웃
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation

  /users/{username}:
    get:
      summary: 유저 프로파일 불러오기
      tags:
        - 사용자 관리
      description: 로그인된 사용자로부터만 수행 가능.
      parameters:
        - name: username
          in: path
          required: true
          description: '불러오고자 하는 유저의 username'
          schema:
            type: string
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid username supplied. Users can access only themselves

    put:
      tags:
        - 사용자 관리
      summary: 유저 정보 업데이트
      description: 로그인된 사용자로부터만 수행 가능.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: 정보를 업데이트 하고자 하는 유저의 username
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: 건국
                lastName:
                  type: string
                  example: 김
                email:
                  type: string
                  example: kunicorn0105@konkuk.ac.kr
                password:
                  type: string
                  example: 'PassW0rD!'
                new_password:
                  type: string
                  example: 'paSSW0Rd@'
                phone:
                  type: string
                  example: '010-0000-1235'
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid username supplied. Users can access only themselves

    delete:
      tags:
        - 사용자 관리
      summary: 유저 삭제
      description: 로그인된 사용자로부터만 수행 가능.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: 삭제하고자 하는 유저의 username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid username supplied. Users can access only themselves

  /users/{username}/mental-status:
    get:
      tags:
        - 사용자 심리 상태 관리
      summary: 유저의 심리 상태 불러오기
      description: 로그인된 사용자로부터만 수행 가능.
      operationId: getUserMentalStatus
      parameters:
        - name: username
          in: path
          description: 심리 상태를 불러오고자 하는 유저의 username
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: integer
            example: 20241009 # YYYYMMDD
        - name: time
          in: query
          required: false
          schema:
            type: integer
            example: 1800
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    example: "unicorn0105"
                  mood:
                    type: array
                    items:
                      $ref: '#/components/schemas/MentalState'

        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid username supplied. Users can access only themselves
        '404':
          description: No date found at queried time.
    post:
      tags:
        - 사용자 심리 상태 관리
      summary: 유저의 심리 상태 제출하기
      description: 로그인된 사용자로부터만 수행 가능.
      operationId: uploadUserMentalStatus
      parameters:
        - name: username
          in: path
          description: 심리 상태를 제출 하고자 하는 유저의 username
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentalState'
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid username supplied. Users can access only themselves

  /parks:
    get:
      summary: GPS 좌표를 기반으로 근처 공원을 불러온다
      tags:
        - 공원
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 37.541874029290504
        - name: longtitue
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 127.07868947184076
      responses:
        '200':
          description: 공원 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinate:
                    $ref: '#/components/schemas/Coordinate'
                  parks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Park'
        '404':
          description: 주변에 위치한 공원이 없음

  /parks/{parkId}:
    get:
      summary: 공원의상세 정보를 불러온다
      tags:
        - 공원
      parameters:
        - name: parkId
          in: path
          required: true
          description: '불러오고자 하는 공원의 id'
          schema:
            type: integer
      responses:
        '200':
          description: Park data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkDetail'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/ParkDetail'
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid park id supplied.

  /weather/current:
    get:
      summary: GPS 좌표를 기반으로 현재 날씨를 불러온다
      tags:
        - 날씨
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 37.541874029290504
        - name: longtitue
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 127.07868947184076
      responses:
        '200':
          description: 유저의 위치에 대한 날씨 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinate:
                    $ref: '#/components/schemas/Coordinate'
                  weather:
                    $ref: '#/components/schemas/Weather'
        '400':
          description: Invalid location
          
  /weather/forecast/hourly:
    get:
      summary: GPS 좌표를 기반으로 시간대별 날씨를 불러온다
      tags:
        - 날씨
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 37.541874029290504
        - name: longtitue
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 127.07868947184076
      responses:
        '200':
          description: 유저의 위치에 대한 날씨 예보
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinate:
                    $ref: '#/components/schemas/Coordinate'
                  forecast:
                    type: array
                    items:
                      $ref: '#/components/schemas/Weather'
        '400':
          description: Invalid location

  /weather/forecast/daily:
    get:
      summary: GPS 좌표를 기반으로 날짜별 날씨를 불러온다
      tags:
        - 날씨
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 37.541874029290504
        - name: longtitue
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 127.07868947184076
      responses:
        '200':
          description: 유저의 위치에 대한 날씨 예보
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinate:
                    $ref: '#/components/schemas/Coordinate'
                  forecast:
                    type: array
                    items:
                      $ref: '#/components/schemas/Weather'
        '400':
          description: Invalid location

  /mental-services:
    get:
      summary: GPS 좌표를 기반으로 근처 정신 건강 서비스를 불러온다
      tags:
        - 정신 건강 서비스
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 37.541874029290504
        - name: longtitue
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 127.07868947184076
      responses:
        '200':
          description: 정신 건강 서비스 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinate:
                    $ref: '#/components/schemas/Coordinate'
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/MentalService'
        '404':
          description: 주변에 위치한 정신 건강 서비스가 없음

  /mental-services/{serviceId}:
    get:
      summary: 정신 건강 서비스의 상세 정보를 불러온다
      tags:
        - 정신 건강 서비스
      parameters:
        - name: serviceId
          in: path
          required: true
          description: '불러오고자 하는 정신 건강 서비스의 id'
          schema:
            type: integer
      responses:
        '200':
          description: Mental service data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentalServiceDetail'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/MentalServiceDetail'
        '401':
          description: Unauthorized. Login is required
        '403':
          description: Invalid mental service id supplied.

  /recommendations:
    get:
      summary: 날씨와 사용자의 상태를 바탕으로 정보를 추천
      tags:
        - 맞춤형 추천 시스템
      responses:
        '200':
          description: 추천 공원과 정신 겅간 서비스들
          content:
            application/json:
              schema:
                type: object
                properties:
                  parks:
                    type: array
                    items:
                      type: integer
                    example: [201, 203, 255]
                  mentalServices:
                    type: array
                    items:
                      type: integer
                    example: [31, 248, 852]
        '404':
          description: No recommendations available for the user

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: unicorn0105
        firstName:
          type: string
          example: 건국
        lastName:
          type: string
          example: 김
        email:
          type: string
          example: kunicorn0105@konkuk.ac.kr
        password:
          type: string
          example: ''
        phone:
          type: string
          example: '010-0000-1234'
        usersLastStatus:
          $ref: '#/components/schemas/MentalState'

    MentalState:
      type: object
      properties:
        date:
          type: integer
          example: 20241009
        time:
          type: integer
          example: 1830
        mood: # 선택지가 아닌 슬라이더도 나쁘지 않을듯?
          type: string
          enum: [happy, sad, anxious, neutral, tired, angry, overwhelmed] # 등등...
        mood_description:
          type: string
          example: "센치(?)한 기분"
      
    Coordinate:
      type: object
      properties:
        latitude:
          type: number
          format: double
          example: 37.52972506913911
        longtitue:
          type: number
          format: double
          example: 127.07014931903332

    Weather:
      type: object
      properties:
        date:
          type: integer
          example: 20241009 # YYYYMMDD
        time:
          type: integer
          example: 1800
        overall:
          type: string
          enum: [맑음, 구름조금, 구름많음, 흐림, 비, 눈/비, 눈]
        sky:
          type: string
          enum: [맑음, 구름조금, 구름많음, 흐림]
        temperature:
          type: number
          format: float
          example: 17.5
        wind_speed: 
          type: number
          format: float
          example: 2.3
        wind_vec:
          type: integer
          example: 330
        rain_prob:
          type: integer
          minimum: 0
          maximum: 100
          example: 30
        rain_amount:
          type: number
          format: float
          example: 3.1

    Park:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 201
        name:
          type: string
          example: "뚝섬 한강 공원"
        address:
          type: string
          example: "대한민국 서울특별시 광진구 강변북로 139"
        coordinate:
          $ref: '#/components/schemas/Coordinate'

    ParkDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 201
        name:
          type: string
          example: "뚝섬 한강 공원"
        address:
          type: string
          example: "대한민국 서울특별시 광진구 강변북로 139"
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        business_hours:
          type: string
          example: "24시간"

    MentalService:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        name:
          type: string
          example: "건국대학교병원"
        address:
          type: string
          example: "서울특별시 광진구 능동로 120-1 (화양동)"
        coordinate:
          $ref: '#/components/schemas/Coordinate'

    MentalServiceDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        name:
          type: string
          example: "건국대학교병원"
        address:
          type: string
          example: "서울특별시 광진구 능동로 120-1 (화양동)"
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        business_hours:
          type: string
          example: "08:30 ~ 17:30"
        type:
          type: string
          example: "상급종합병원"
        link:
          type: string
          example: "https://www.kuh.ac.kr/main.do"
        tel:
          type: string
          example: "15881533"
